package labrestaurante;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.awt.event.KeyEvent;

import java.io.BufferedWriter;

import java.io.FileWriter;

import java.io.IOException;

import javax.swing.*;

import java.io.*;

import java.util.Scanner;

import java.util.logging.Level;

import java.util.logging.Logger;

import javax.swing.table.DefaultTableModel;

public class Lobby extends JFrame {

    /**
     * Creates new form Lobby
     */
    class Nodo {

        int dato;

        String dato2;

        Nodo siguiente;

    }
    ListaEnlazada Lcamareros = new ListaEnlazada();
    ListaEnlazada camarero1 = new ListaEnlazada();
    ListaEnlazada camarero2 = new ListaEnlazada();
    ListaEnlazada camarero3 = new ListaEnlazada();
    ListaEnlazada camarero4 = new ListaEnlazada();

    String direccion = "FilesLab/Comida.txt";

    String direccion2 = "FilesLab/Bebida.txt";

    String direccion3 = "FilesLab/Postre.txt";
    String direccioncama = "FilesLab/Camareros.txt";
    String direccionProv = "FilesLab/provisiones.txt";
    String direccionRecetas = "FilesLab/Recetas.txt";

    File archivo = new File(direccion);

    File archivo2 = new File(direccion2);

    File archivo3 = new File(direccion3);
    File archivocama = new File(direccioncama);
    File archivoProvisiones = new File(direccionProv);
    File archivoRecetas = new File(direccionRecetas);

    ListaEnlazada listo2 = new ListaEnlazada();
    ListaEnlazada listaplato = new ListaEnlazada();
    ListaEnlazada listaplato2 = new ListaEnlazada();
    ListaEnlazada listaplato3 = new ListaEnlazada();
    ListaEnlazada listaa = new ListaEnlazada();
    ListaEnlazada Cmayor = new ListaEnlazada();

    public int Total;

    public Lobby() {
        initComponents();

        setLocationRelativeTo(null);

        setResizable(false);
        asignarmesa();
        vaciarchivo("FilesLab/Costo.txt");
        vaciarchivo("FilesLab/factura.txt");
        Total = 0;

    }
    String mayor = "", cmayor = "";
    int mayor1 = 0;
    int c1 = 0, c2 = 0, c3 = 0, c4 = 0;
    int Cmayor1 = -1;

    public void vaciarchivo(String archi) {

        try (FileWriter escribir = new FileWriter(archi);
                BufferedWriter bw = new BufferedWriter(escribir)) {

        } catch (IOException ex) {
            //MOSTRAR MENSAJE QUE NO SE PUDO CREAR EL ARCHIVO.
        }

    }

    public void asignarmesa() {
        try (Scanner lector = new Scanner(archivocama)) {
            while (lector.hasNextLine()) {

                String linea = lector.nextLine();
                if (camarero1.tamaño() < 1) {
                    camarero1.addultimo(linea);
                } else if (camarero2.tamaño() < 1) {
                    camarero2.addultimo(linea);
                } else if (camarero3.tamaño() < 1) {
                    camarero3.addultimo(linea);
                } else if (camarero4.tamaño() < 1) {
                    camarero4.addultimo(linea);
                }
            }
            lector.close();

        } catch (NumberFormatException ex) {

        } catch (Exception ex) {

        }

    }

    int seg = 0, min = 0, hora = 0;

    Timer timer = new Timer(10, new ActionListener() {

        @Override

        public void actionPerformed(ActionEvent ev) {

            seg++;

            System.out.println(seg);

            seg = progreso.getValue();

            if (seg < 100) {

                seg++;

                progreso.setValue(seg);

            } else {

                if (Estado.getText().equals("Espera")) {

                    Estado.setText("Listo");

                    Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/check.png")));

                    listo2.addultimo(CBescogermesa.getSelectedItem());

                }

                preparando.dispose();

                timer.stop();

                JOptionPane.showMessageDialog(null, "Completado");

                progreso.setValue(0);
                PizarraI.setVisible(true);

            }

        }

    });

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        camarerosframe2 = new javax.swing.JFrame();
        Emesa = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        CBpostre = new javax.swing.JComboBox<>();
        sp3 = new javax.swing.JSpinner();
        jScrollPane7 = new javax.swing.JScrollPane();
        Tablapo = new javax.swing.JTable();
        agregarP = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        Mcamarero = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        sp1 = new javax.swing.JSpinner();
        CBcomida = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        Tablaco = new javax.swing.JTable();
        agregarC = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        CBbebida = new javax.swing.JComboBox<>();
        sp2 = new javax.swing.JSpinner();
        jScrollPane6 = new javax.swing.JScrollPane();
        Tablabe = new javax.swing.JTable();
        agregarB = new javax.swing.JButton();
        camarerosenviar = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        registro = new javax.swing.JFrame();
        passnuevo = new javax.swing.JPasswordField();
        verificar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nombrenuevo = new javax.swing.JTextField();
        PizarraI = new javax.swing.JFrame();
        jLabel72 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        CBescogermesa = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaC = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaP = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaB = new javax.swing.JTable();
        preparar = new javax.swing.JButton();
        factura1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Estado = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        NombreCamarero = new javax.swing.JLabel();
        preparando = new javax.swing.JFrame();
        jLabel19 = new javax.swing.JLabel();
        progreso = new javax.swing.JProgressBar();
        jLabel22 = new javax.swing.JLabel();
        Factura = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        Factu = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Propi = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        admin = new javax.swing.JFrame();
        jPanel11 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        B1 = new javax.swing.JRadioButton();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        B2 = new javax.swing.JRadioButton();
        B3 = new javax.swing.JRadioButton();
        B4 = new javax.swing.JRadioButton();
        jLabel63 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        ir1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        FrameM = new javax.swing.JFrame();
        ComboA = new javax.swing.JComboBox<>();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        Provisiones = new javax.swing.JFrame();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablalimentos = new javax.swing.JTable();
        defecto = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        newplato = new javax.swing.JTextField();
        co1 = new javax.swing.JRadioButton();
        be1 = new javax.swing.JRadioButton();
        po1 = new javax.swing.JRadioButton();
        newP = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        newprecio = new javax.swing.JTextField();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        camarero = new javax.swing.JButton();
        nuevo = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        verPedi = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        entrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        contrasena = new javax.swing.JPasswordField();
        usuario = new javax.swing.JTextField();
        registrarse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Prov = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();

        camarerosframe2.setMinimumSize(new java.awt.Dimension(710, 515));
        camarerosframe2.setSize(new java.awt.Dimension(700, 480));
        camarerosframe2.getContentPane().setLayout(null);

        Emesa.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Emesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoger Mesa", "mesa 1.", "mesa 2.", "mesa 3.", "mesa 4.", "mesa 5.", "mesa 6.", "mesa 7.", "mesa 8.", "mesa 9.", "mesa 10.", "mesa 11.", "mesa 12.", "mesa 13.", "mesa 14.", "mesa 15.", "mesa 16.", "mesa 17.", "mesa 18.", "mesa 19.", "mesa 20." }));
        Emesa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EmesaItemStateChanged(evt);
            }
        });
        Emesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmesaActionPerformed(evt);
            }
        });
        camarerosframe2.getContentPane().add(Emesa);
        Emesa.setBounds(500, 30, 130, 30);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Postre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        CBpostre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione su postre", "Helado-$3", "Pudin-$4", "Chocolate-$1" }));
        CBpostre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBpostreItemStateChanged(evt);
            }
        });

        sp3.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        Tablapo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Postre", "Cantidad", "Precio"
            }
        ));
        jScrollPane7.setViewportView(Tablapo);

        agregarP.setText("agregar");
        agregarP.setEnabled(false);
        agregarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPActionPerformed(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ice-cream.png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(CBpostre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(agregarP, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBpostre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(agregarP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        camarerosframe2.getContentPane().add(jPanel8);
        jPanel8.setBounds(479, 137, 204, 279);

        Mcamarero.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        camarerosframe2.getContentPane().add(Mcamarero);
        Mcamarero.setBounds(360, 40, 81, 20);

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel71.setText("Menú");
        camarerosframe2.getContentPane().add(jLabel71);
        jLabel71.setBounds(47, 11, 236, 67);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Comidas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chicken.png"))); // NOI18N

        sp1.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        sp1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sp1.setRequestFocusEnabled(false);
        sp1.setValue(1);
        sp1.setVerifyInputWhenFocusTarget(false);

        CBcomida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione su comida", "Pollo-$10", "Carne-$15", "Sopa-$5" }));
        CBcomida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBcomidaItemStateChanged(evt);
            }
        });

        Tablaco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comida", "Cantidad", "Precio"
            }
        ));
        jScrollPane5.setViewportView(Tablaco);

        agregarC.setText("agregar");
        agregarC.setEnabled(false);
        agregarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(CBcomida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agregarC, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBcomida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21)
                    .addComponent(agregarC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        camarerosframe2.getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 137, 219, 279);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bebidas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/coffee.png"))); // NOI18N

        CBbebida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione su bebida", "Agua-$3", "Gaseosa-$5", "Cerveza-$4" }));
        CBbebida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBbebidaItemStateChanged(evt);
            }
        });

        sp2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        Tablabe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bebida", "Cantidad", "Precio"
            }
        ));
        jScrollPane6.setViewportView(Tablabe);

        agregarB.setText("agregar");
        agregarB.setEnabled(false);
        agregarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(CBbebida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(agregarB, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBbebida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregarB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        camarerosframe2.getContentPane().add(jPanel5);
        jPanel5.setBounds(242, 137, 208, 279);

        camarerosenviar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        camarerosenviar.setText("enviar");
        camarerosenviar.setEnabled(false);
        camarerosenviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camarerosenviarActionPerformed(evt);
            }
        });
        camarerosframe2.getContentPane().add(camarerosenviar);
        camarerosenviar.setBounds(285, 440, 130, 31);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/menu(1).png"))); // NOI18N
        camarerosframe2.getContentPane().add(jLabel17);
        jLabel17.setBounds(290, 20, 64, 72);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/waves_01.jpg"))); // NOI18N
        jLabel5.setMinimumSize(new java.awt.Dimension(1666, 1600));
        camarerosframe2.getContentPane().add(jLabel5);
        jLabel5.setBounds(-6, -6, 950, 480);

        passnuevo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passnuevoKeyPressed(evt);
            }
        });

        verificar.setText("Verificar");
        verificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verificarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Llene los siguientes campos para registrarse:");

        jLabel10.setText("Nombre:");

        jLabel11.setText("Contraseña:");

        nombrenuevo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombrenuevoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout registroLayout = new javax.swing.GroupLayout(registro.getContentPane());
        registro.getContentPane().setLayout(registroLayout);
        registroLayout.setHorizontalGroup(
            registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(registroLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nombrenuevo)
                    .addComponent(passnuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(registroLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(verificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        registroLayout.setVerticalGroup(
            registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registroLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(nombrenuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(passnuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(verificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PizarraI.setMinimumSize(new java.awt.Dimension(480, 520));
        PizarraI.setSize(new java.awt.Dimension(480, 515));
        PizarraI.getContentPane().setLayout(null);

        jLabel72.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/waitress(1).png"))); // NOI18N
        PizarraI.getContentPane().add(jLabel72);
        jLabel72.setBounds(10, 120, 152, 137);

        jLabel69.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel69.setText("Pizarra Interactiva");
        PizarraI.getContentPane().add(jLabel69);
        jLabel69.setBounds(67, 11, 289, 44);

        CBescogermesa.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        CBescogermesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoger Mesa" }));
        CBescogermesa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBescogermesaItemStateChanged(evt);
            }
        });
        PizarraI.getContentPane().add(CBescogermesa);
        CBescogermesa.setBounds(45, 73, 107, 37);

        tablaC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comidas", "Cantidad", "Precio"
            }
        ));
        jScrollPane1.setViewportView(tablaC);

        PizarraI.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(255, 127, 209, 138);

        tablaP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Postres", "Cantidad", "Precio"
            }
        ));
        jScrollPane2.setViewportView(tablaP);

        PizarraI.getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(255, 283, 209, 138);

        tablaB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bebidas", "Cantidad", "Precio"
            }
        ));
        jScrollPane3.setViewportView(tablaB);

        PizarraI.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 283, 209, 138);

        preparar.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        preparar.setText("Preparar");
        preparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepararActionPerformed(evt);
            }
        });
        PizarraI.getContentPane().add(preparar);
        preparar.setBounds(60, 450, 150, 29);

        factura1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        factura1.setText("Factura");
        factura1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factura1ActionPerformed(evt);
            }
        });
        PizarraI.getContentPane().add(factura1);
        factura1.setBounds(280, 450, 140, 29);

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel8.setText("Estado:");
        PizarraI.getContentPane().add(jLabel8);
        jLabel8.setBounds(240, 70, 80, 40);

        Estado.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png"))); // NOI18N
        Estado.setText("Ninguno");
        PizarraI.getContentPane().add(Estado);
        Estado.setBounds(343, 67, 130, 40);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/waves_01.jpg"))); // NOI18N
        PizarraI.getContentPane().add(jLabel20);
        jLabel20.setBounds(0, 0, 480, 510);
        PizarraI.getContentPane().add(NombreCamarero);
        NombreCamarero.setBounds(140, 180, 90, 40);

        preparando.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        preparando.setMinimumSize(new java.awt.Dimension(300, 290));
        preparando.setUndecorated(true);
        preparando.getContentPane().setLayout(null);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/restaurant(1).png"))); // NOI18N
        preparando.getContentPane().add(jLabel19);
        jLabel19.setBounds(73, 46, 128, 101);
        preparando.getContentPane().add(progreso);
        progreso.setBounds(73, 165, 146, 14);

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/waves_01.jpg"))); // NOI18N
        preparando.getContentPane().add(jLabel22);
        jLabel22.setBounds(0, 0, 300, 270);

        Factura.setMinimumSize(new java.awt.Dimension(445, 330));
        Factura.setUndecorated(true);
        Factura.setSize(new java.awt.Dimension(400, 330));

        Factu.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Factu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comida", "Cantidad", "Precio", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Factu);

        jLabel12.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel12.setText("Total (incluido IVA):");

        jLabel13.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel13.setText("Propina 10%:");

        Propi.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N

        total.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/invoice.png"))); // NOI18N

        jButton1.setText("atras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("pagar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FacturaLayout = new javax.swing.GroupLayout(Factura.getContentPane());
        Factura.getContentPane().setLayout(FacturaLayout);
        FacturaLayout.setHorizontalGroup(
            FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
            .addGroup(FacturaLayout.createSequentialGroup()
                .addGroup(FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FacturaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Propi, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FacturaLayout.setVerticalGroup(
            FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FacturaLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FacturaLayout.createSequentialGroup()
                        .addGroup(FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(Propi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(FacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addGroup(FacturaLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addGap(29, 29, 29))))
        );

        admin.setMinimumSize(new java.awt.Dimension(611, 433));

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel44.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel44.setText("lista ordenada por mesas en la que se indica el resumen de ");

        jLabel57.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel57.setText("ventas en dicha mesa.");

        buttonGroup1.add(B1);

        jLabel58.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel58.setText("Total de ventas diarias");

        jLabel59.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel59.setText("Plato más solicitado.");

        jLabel60.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel60.setText("Camarero que gestionó mayor número de mesas ");

        buttonGroup1.add(B2);

        buttonGroup1.add(B3);

        buttonGroup1.add(B4);
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(265, 265, 265)
                        .addComponent(B1))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addGap(121, 121, 121)
                        .addComponent(B4))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(B2))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(B3)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel44)
                .addGap(6, 6, 6)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel57)
                            .addComponent(B1))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel58))
                    .addComponent(B2))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel59)
                    .addComponent(B3))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel60)
                    .addComponent(B4))
                .addGap(50, 50, 50))
        );

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel63.setText("Seleccione la opción deseada:");

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel62.setText("Punto de Administración.");
        jLabel62.setMaximumSize(new java.awt.Dimension(530, 850));
        jLabel62.setMinimumSize(new java.awt.Dimension(530, 850));

        ir1.setText("Ir");
        ir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminLayout = new javax.swing.GroupLayout(admin.getContentPane());
        admin.getContentPane().setLayout(adminLayout);
        adminLayout.setHorizontalGroup(
            adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLayout.createSequentialGroup()
                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(adminLayout.createSequentialGroup()
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(ir1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminLayout.setVerticalGroup(
            adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLayout.createSequentialGroup()
                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ir1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        FrameM.setMinimumSize(new java.awt.Dimension(385, 100));

        ComboA.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        ComboA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoger Mesa", "mesa 1.", "mesa 2.", "mesa 3.", "mesa 4.", "mesa 5.", "mesa 6.", "mesa 7.", "mesa 8.", "mesa 9.", "mesa 10.", "mesa 11.", "mesa 12.", "mesa 13.", "mesa 14.", "mesa 15.", "mesa 16.", "mesa 17.", "mesa 18.", "mesa 19.", "mesa 20." }));
        ComboA.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboAItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout FrameMLayout = new javax.swing.GroupLayout(FrameM.getContentPane());
        FrameM.getContentPane().setLayout(FrameMLayout);
        FrameMLayout.setHorizontalGroup(
            FrameMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameMLayout.createSequentialGroup()
                .addComponent(ComboA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(FrameMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FrameMLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(FrameMLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        FrameMLayout.setVerticalGroup(
            FrameMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameMLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(ComboA, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        Provisiones.setMinimumSize(new java.awt.Dimension(450, 400));

        tablalimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Pollo", "0"},
                {"Carne", "0"},
                {"Sopa", "0"},
                {"Cerveza", "0"},
                {"Agua", "0"},
                {"Gaseosa", "0"},
                {"Helado", "0"},
                {"Pudin", "0"},
                {"Chocolate", "0"}
            },
            new String [] {
                "Alimento", "Cantidad"
            }
        ));
        jScrollPane8.setViewportView(tablalimentos);

        defecto.setText("defecto");
        defecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defectoActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel25.setText("Agregar plato:");

        buttonGroup2.add(co1);
        co1.setText("Comida");

        buttonGroup2.add(be1);
        be1.setText("Bebida");
        be1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                be1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(po1);
        po1.setText("postre");

        newP.setText("Enviar");
        newP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPActionPerformed(evt);
            }
        });

        jLabel26.setText("Digite precio:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(co1)
                        .addGap(18, 18, 18)
                        .addComponent(be1)
                        .addGap(32, 32, 32)
                        .addComponent(po1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(newplato, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newP))
                            .addComponent(newprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(newplato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(newprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(co1)
                    .addComponent(be1)
                    .addComponent(po1))
                .addContainerGap())
        );

        javax.swing.GroupLayout ProvisionesLayout = new javax.swing.GroupLayout(Provisiones.getContentPane());
        Provisiones.getContentPane().setLayout(ProvisionesLayout);
        ProvisionesLayout.setHorizontalGroup(
            ProvisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProvisionesLayout.createSequentialGroup()
                .addGroup(ProvisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProvisionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ProvisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(defecto)))
                    .addGroup(ProvisionesLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        ProvisionesLayout.setVerticalGroup(
            ProvisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProvisionesLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(defecto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Camareros:");

        camarero.setText("Atender mesa");
        camarero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camareroActionPerformed(evt);
            }
        });

        nuevo.setText("Soy nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/waitress.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(camarero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevo)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(camarero))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nuevo)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Restaurante la");

        jLabel15.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel15.setText("prosperidad");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/food(2).png"))); // NOI18N

        verPedi.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        verPedi.setText("Ver Pedidos");
        verPedi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verPediActionPerformed(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.black, java.awt.Color.black));

        entrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        entrar.setText("Entrar");
        entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Usuario:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Contraseña:");

        usuario.setAutoscrolls(false);

        registrarse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        registrarse.setText("Registrarse");
        registrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Gerentes:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(entrar))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(contrasena, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(usuario))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(registrarse)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registrarse)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entrar)
                .addContainerGap())
        );

        Prov.setText("entrar");
        Prov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProvActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("Jefe de cocina:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(96, 96, 96)
                                .addComponent(jLabel16)
                                .addGap(38, 38, 38)
                                .addComponent(verPedi))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addGap(41, 41, 41)
                                        .addComponent(Prov))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel15))
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(Prov))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addComponent(verPedi, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void eliminardatos(JTable tabla) {
        int cont = 0;

        try {
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();

            if (model.getValueAt(cont, cont) != null) {

                while (cont < model.getRowCount()) {

                    model.removeRow(cont);

                }

            }
        } catch (Exception e) {

        }
    }
    private void camareroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camareroActionPerformed

        //UN CAMARERO YA REGISTRADO VA A INGRESAR...
        camareroregistrado();

        int cont = 0;
        eliminardatos(Tablaco);
        eliminardatos(Tablabe);
        eliminardatos(Tablapo);

    }//GEN-LAST:event_camareroActionPerformed

    public void camareroregistrado() {

        ListaEnlazada listac = new ListaEnlazada();

        String answer = JOptionPane.showInputDialog("Escriba su nombre de usuario:");

        Camareros cama = new Camareros();

        int sw;

        if (answer != null) {

            if (!answer.equals("")) {

                sw = cama.camarer0(answer);

                listac.addultimo(answer);

                if (sw == 1) {

                    Mcamarero.setText(answer);

                    camarerosframe2.setVisible(true);

                    camarerosframe2.setResizable(false);

                    camarerosframe2.setSize(900, 500);

                    camarerosframe2.setLocationRelativeTo(null);

                } else {

                    JOptionPane.showMessageDialog(null, "Usted no está registrado.", "Atención", JOptionPane.ERROR_MESSAGE);

                }

            } else {

                JOptionPane.showMessageDialog(null, "Debe llenar el campo correctamente.", "Atención", JOptionPane.ERROR_MESSAGE);

            }

        } else {

        }

    }
    public void haynuevo(String answer){
        if(camarero1.tamaño() == 0){
            camarero1.addultimo(answer);
        }else if(camarero2.tamaño() == 0){
            camarero2.addultimo(answer);
        }else if(camarero3.tamaño() == 0){
            camarero3.addultimo(answer);
        }else if(camarero4.tamaño() == 0){
            camarero4.addultimo(answer);
        }
    }
    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        //AQUÍ CUANDO UN CAMARERO ES NUEVO...
        int cont = 0;
        String answer = JOptionPane.showInputDialog("Escriba un nombre de usuario:");
        System.out.println(answer);
        if (answer != null) {

            if (!"".equals(answer)) {
                RegistrandoCamarero registrandocamareros = new RegistrandoCamarero();
                registrandocamareros.RegistrandoCamarero(answer, cont);
                haynuevo(answer);

            } else {
                JOptionPane.showMessageDialog(null, "Debe elegir un nombre de usuario válido.", "Atención",
                        JOptionPane.ERROR_MESSAGE);
            }

        } else {

            JOptionPane.showMessageDialog(null, "Inscríbase pronto, lo esperamos.", "Atención",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_nuevoActionPerformed

    private void EmesaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EmesaItemStateChanged
        if (Emesa.getSelectedItem().equals("Escoger Mesa")) {

            camarerosenviar.setEnabled(false);
        } else {

            camarerosenviar.setEnabled(true);

        }
    }//GEN-LAST:event_EmesaItemStateChanged

    private void CBcomidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBcomidaItemStateChanged
        if (CBcomida.getSelectedItem().equals("Seleccione su comida")) {
            agregarC.setEnabled(false);
        } else {
            agregarC.setEnabled(true);
        }
    }//GEN-LAST:event_CBcomidaItemStateChanged

    public int versihay(String co, JSpinner sp) {
        int rs = 0;
        try (FileWriter escribir = new FileWriter("FilesLab/Provisiones.txt");
                BufferedWriter bw = new BufferedWriter(escribir)) {

            DefaultTableModel model = (DefaultTableModel) tablalimentos.getModel();

            for (int i = 0; i < model.getRowCount(); i++) {

                
                String AASa = (String) model.getValueAt(i, 0);
                if (model.getValueAt(i, 0).equals(co)) {
                    int restar = (int) sp.getValue();
                    int result = Integer.parseInt(model.getValueAt(i, 1).toString()) - restar;
                    if (result < 0) {
                        return rs;
                    } else {

                        model.setValueAt(result, i, 1);
                        rs = 1;

                    }
                }
                bw.write(model.getValueAt(i, 0) + "," + model.getValueAt(i, 1));
                bw.newLine();

            }
        } catch (IOException ex) {
            //MOSTRAR MENSAJE QUE NO SE PUDO CREAR EL ARCHIVO.
        }
        return rs;
    }
    private void agregarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCActionPerformed
        ListaEnlazada lista = new ListaEnlazada();

        DefaultTableModel model = (DefaultTableModel) Tablaco.getModel();

        String comida = CBcomida.getSelectedItem().toString();
        String co = "";
        int i = 0;
        int j = 1;

        while (!"-".equals(comida.substring(i, j))) {
            co = co + comida.substring(i, j);
            System.out.println(co);
            i++;
            j++;
        }
        int rs = versihay(co, sp1);
        if (rs == 1) {
            Object cantidad = sp1.getValue();
            Object precio = comida.substring(j, comida.length());

            model.addRow(new Object[]{co, cantidad, precio});
            platomas(Tablaco);
        } else {
            JOptionPane.showMessageDialog(null, "no hay suficiente cantidad en bodega de " + co);
        }


    }//GEN-LAST:event_agregarCActionPerformed
    public void platomas(JTable tabla) {
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();

        String x = model.getValueAt(model.getRowCount() - 1, 0).toString();
        String x1 = model.getValueAt(model.getRowCount() - 1, 1).toString();
        String x2 = x + "," + x1;
        listaplato.addultimo(x2);
        System.out.println(listaplato.obtener(listaplato.tamaño() - 1));

    }
    private void CBpostreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBpostreItemStateChanged
        if (CBpostre.getSelectedItem().equals("Seleccione su postre")) {
            agregarP.setEnabled(false);
        } else {
            agregarP.setEnabled(true);
        }
    }//GEN-LAST:event_CBpostreItemStateChanged

    private void agregarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPActionPerformed
        //Postre
        DefaultTableModel model2 = (DefaultTableModel) Tablapo.getModel();
        String postre = CBpostre.getSelectedItem().toString();
        String po = "";
        int i = 0;
        int j = 1;
        while (!"-".equals(postre.substring(i, j))) {
            po = po + postre.substring(i, j);
            System.out.println(po);
            i++;
            j++;
        }
        int rs = versihay(po,sp3);
        if(rs==1){
        Object cantidad2 = sp3.getValue();
        Object precio2 = postre.substring(j, postre.length());
        model2.addRow(new Object[]{po, cantidad2, precio2});
        platomas(Tablapo);
        } else {
            JOptionPane.showMessageDialog(null, "no hay suficiente cantidad en bodega de " + po);
        }
    }//GEN-LAST:event_agregarPActionPerformed

    private void CBbebidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBbebidaItemStateChanged
        if (CBbebida.getSelectedItem().equals("Seleccione su bebida")) {
            agregarB.setEnabled(false);
        } else {
            agregarB.setEnabled(true);
        }
    }//GEN-LAST:event_CBbebidaItemStateChanged

    private void agregarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBActionPerformed
        //Bebida
        DefaultTableModel model1 = (DefaultTableModel) Tablabe.getModel();
        String bebida = CBbebida.getSelectedItem().toString();
        String be = "";
        int i = 0;
        int j = 1;
        while (!"-".equals(bebida.substring(i, j))) {
            be = be + bebida.substring(i, j);
            System.out.println(be);
            i++;
            j++;
        }
        int rs = versihay(be,sp2);
        if(rs ==1){
        Object cantidad1 = sp2.getValue();
        Object precio1 = bebida.substring(j, bebida.length());
        model1.addRow(new Object[]{be, cantidad1, precio1});
        platomas(Tablabe);
        } else {
            JOptionPane.showMessageDialog(null, "no hay suficiente cantidad en bodega de " + be);
        }
    }//GEN-LAST:event_agregarBActionPerformed
    public int recorrerlista(ListaEnlazada camarero) {
        int i = 1, sw = 0;
        System.out.println(camarero.tamaño);
        while (i < camarero.tamaño()) {

            if (camarero.obtener(i).equals(Emesa.getSelectedItem())) {
                sw = 1;

            }
            i++;
        }
        return sw;
    }
    private void camarerosenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camarerosenviarActionPerformed
        //System.out.println(camarero1.obtener(0));

        String ca1 = "", ca2 = "", ca3 = "", ca4 = "", cama1 = Mcamarero.getText();
        if (camarero1.tamaño() != 0) {
            ca1 = camarero1.obtener(0).toString();
        }
        if (camarero2.tamaño() != 0) {
            ca2 = camarero2.obtener(0).toString();
        }
        if (camarero3.tamaño() != 0) {
            ca3 = camarero3.obtener(0).toString();
        }
        if (camarero4.tamaño() != 0) {
            ca4 = camarero4.obtener(0).toString();
        }

        if (ca1.equals(cama1)) {
            c1++;

        } else if (ca2.equals(cama1)) {
            c2++;
        } else if (ca3.equals(cama1)) {
            c3++;
        } else if (ca4.equals(cama1)) {
            c4++;
        }
        if (c1 > Cmayor1) {
            Cmayor1 = c1;
            cmayor = ca1;
        }
        if (c2 > Cmayor1) {
            Cmayor1 = c2;
            cmayor = ca2;
        }
        if (c3 > Cmayor1) {
            Cmayor1 = c3;
            cmayor = ca3;
        }
        if (c4 > Cmayor1) {
            Cmayor1 = c4;
            cmayor = ca4;
        }
        Cmayor.addultimo(Cmayor1);
        Cmayor.addultimo(cmayor);
        int sw;
        String asd = Mcamarero.getText();
        asd = camarero1.obtener(0).toString();
        if (camarero1.obtener(0).toString().equals(Mcamarero.getText())) {
            if (camarero1.tamaño() < 6) {
                sw = recorrerlista(camarero1);
                if (sw == 0) {

                    camarero1.addultimo(Emesa.getSelectedItem());

                    //  Emesa.removeItem(camarero1.obtener(camarero1.tamaño() - 1));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Este camarero ya tiene \n 5 mesas asignadas", "maximo de mesas",
                        JOptionPane.WARNING_MESSAGE);
            }
        } else if (camarero2.obtener(0).equals(Mcamarero.getText())) {
            if (camarero2.tamaño() < 6) {
                sw = recorrerlista(camarero2);
                if (sw == 0) {

                    camarero2.addultimo(Emesa.getSelectedItem());
                    //  Emesa.removeItem(camarero2.obtener(camarero2.tamaño() - 1));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Este camarero ya tiene \n 5 mesas asignadas", "maximo de mesas",
                        JOptionPane.WARNING_MESSAGE);
            }
        } else if (camarero3.obtener(0).equals(Mcamarero.getText())) {
            if (camarero3.tamaño() < 6) {
                sw = recorrerlista(camarero3);
                if (sw == 0) {
                    camarero3.addultimo(Emesa.getSelectedItem());
                    // Emesa.removeItem(camarero3.obtener(camarero3.tamaño() - 1));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Este camarero ya tiene \n 5 mesas asignadas", "maximo de mesas",
                        JOptionPane.WARNING_MESSAGE);
            }
        } else if (camarero4.obtener(0).equals(Mcamarero.getText())) {
            if (camarero4.tamaño() < 6) {
                sw = recorrerlista(camarero4);

                if (sw == 0) {
                    camarero4.addultimo(Emesa.getSelectedItem());
                    //Emesa.removeItem(camarero4.obtener(camarero4.tamaño() - 1));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Este camarero ya tiene \n 5 mesas asignadas", "maximo de mesas",
                        JOptionPane.WARNING_MESSAGE);
            }
        }
        Lcamareros.addultimo(Emesa.getSelectedItem());

        Camareros cama = new Camareros();

        cama.pedido(Tablaco, Tablabe, Tablapo, Emesa);

        camarerosframe2.setVisible(false);

    }//GEN-LAST:event_camarerosenviarActionPerformed

    private void passnuevoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passnuevoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificar.doClick();
        }
    }//GEN-LAST:event_passnuevoKeyPressed

    private void verificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verificarActionPerformed
        Verificando();
    }//GEN-LAST:event_verificarActionPerformed
    public void Verificando() {

        if (!nombrenuevo.getText().equals("") && !passnuevo.getText().equals("")) {

            //AQUÍ, TENGO QUE LEER TODO EL ARCHIVO PARA VERIFICAR QUE NO HAY OTRO USUARIO CON EL MISMO NOMBRE
            //LUEGO...:
            int sw = 0;

            try (FileReader escribir = new FileReader("FilesLab/Gerentes.txt");
                    BufferedReader br = new BufferedReader(escribir)) {

                String linea = "";

                while (linea != null) {

                    linea = br.readLine();

                    if (linea != null) {

                        String splt[] = linea.split(";");

                        if (nombrenuevo.getText().equals(splt[0])) {

                            sw = 1;

                        }

                    }

                }

            } catch (IOException ex) {

                //MOSTRAR MENSAJE QUE ALGO SALIÓ MAL
            }

            if (sw == 0) {

                try (FileWriter escribir = new FileWriter("FilesLab/Gerentes.txt", true);
                        BufferedWriter bw = new BufferedWriter(escribir)) {

                    bw.write(nombrenuevo.getText() + ";" + passnuevo.getText());

                    bw.newLine();

                    JOptionPane.showMessageDialog(null, "Registrado correctamente.", "Atención",
                            JOptionPane.INFORMATION_MESSAGE);

                    nombrenuevo.setText("");

                    passnuevo.setText("");

                    registro.setVisible(false);

                } catch (IOException ex) {

                    //MOSTRAR MENSAJE QUE NO SE PUDO CREAR EL ARCHIVO.
                }

            } else {

                JOptionPane.showMessageDialog(null, "Debe seleccionar otro nombre.", "Atención",
                        JOptionPane.ERROR_MESSAGE);

                nombrenuevo.setText("");

                passnuevo.setText("");

            }

        } else {

            JOptionPane.showMessageDialog(null, "Debe llenar los campos correctamente.", "Atención",
                    JOptionPane.ERROR_MESSAGE);

            nombrenuevo.setText("");

            passnuevo.setText("");

        }

    }
    private void nombrenuevoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombrenuevoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificar.doClick();
        }
    }//GEN-LAST:event_nombrenuevoKeyPressed

    public void elminarmesa(JTable tabla, File archi, JComboBox mesa) {

//       <editor-fold defaultstate="collapsed" desc="Visualizando La Comida">
        try (Scanner lector = new Scanner(archi)) {

            DefaultTableModel model = (DefaultTableModel) tabla.getModel();

            // Mientras el archivo tenga otra línea.
            Scanner lector1 = new Scanner(archi);

            if (model.getRowCount() > 0) {

                int R = model.getRowCount();

                int i = 0;

                System.out.println("cantidad de filas: " + R);

                /*for (int i = 0; i < model.getRowCount(); i++) {

                    

                    model.removeRow(model.getRowCount()-1);

                    int R2 = model.getRowCount();

                    System.out.println(R2);

                }*/
                while (i < model.getRowCount()) {

                    model.removeRow(i);

                }

            }

            DefaultTableModel model3 = (DefaultTableModel) tabla.getModel();

            String x = "";

            String linea;

            int i;

            int j;

            String comida;

            String cantidad;

            String precio;

            int m = 0;

            do {

                while (lector.hasNextLine()) {

                    linea = lector.nextLine();

                    if (!linea.equals("")) {

                        int p = 0;

                        int ñ = 0;

                        while (!linea.substring(p, p + 1).equals(".")) {

                            if (linea.substring(p, p + 1).equals(",")) {

                                ñ++;

                            }

                            if (ñ == 3) {

                                x = linea.substring(p + 1, linea.length());

                            }

                            p++;

                            i = 0;

                            j = 1;

                            comida = "";

                            cantidad = "";

                            precio = "";

                            if (mesa.getSelectedItem().toString().equals(x)) {

                                while (!",".equals(linea.substring(i, j))) {

                                    comida = comida + linea.substring(i, j);

                                    i++;

                                    j++;

                                }

                                i = i + 1;

                                j = j + 1;

                                while (!",".equals(linea.substring(i, j))) {

                                    cantidad = cantidad + linea.substring(i, j);

                                    i++;

                                    j++;

                                }

                                i = i + 1;

                                j = j + 1;

                                while (!",".equals(linea.substring(i, j))) {

                                    precio = precio + linea.substring(i, j);

                                    i++;

                                    j++;

                                }

                                model3.addRow(new Object[]{comida, cantidad, precio});

                                p = linea.length() - 1;

                            }

                            x = "";

                        }

                        // Agregamos datos a la tabla
                    }

                }

                lector.close();
                m++;
            } while (m < Lcamareros.tamaño());

            //aqui puedo descubir por que se repite
        } catch (FileNotFoundException ex) {

            System.out.println("no se que pasa");

        } catch (NumberFormatException ex) {

            // TODO enviar mensaje al usuario
            System.out.println("no se que pasa 2");

        } catch (Exception ex) {

            // TODO enviar mensaje al usuario
            System.out.println("no se que pasa 3");

        }

        // </editor-fold>  
    }
    private void CBescogermesaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBescogermesaItemStateChanged
        if (CBescogermesa.getSelectedItem().toString().equals("Escoger Mesa")) {

            factura1.setEnabled(false);

        } else {

            factura1.setEnabled(true);

        }

        if (CBescogermesa.getSelectedItem().equals("Escoger Mesa")) {

            preparar.setEnabled(false);

            Estado.setText("Ninguno");

            Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png")));

        } else {

            preparar.setEnabled(true);

            if (tablaC.getRowCount() == 0 && tablaB.getRowCount() == 0 && tablaP.getRowCount() == 0) {

                preparar.setEnabled(false);

                Estado.setText("Ninguno");

                Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png")));

            } else {

                Estado.setText("Espera");

                Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/loading.png")));

                int me = 0;

                if (listo2.tamaño() != 0) {

                    do {

                        if (CBescogermesa.getSelectedItem().equals(listo2.obtener(me).toString())) {

                            Estado.setText("Listo");

                            Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/check.png")));

                        }

                        me++;

                    } while (me < listo2.tamaño());

                }

            }

        }

        elminarmesa(tablaC, archivo, CBescogermesa);

        elminarmesa(tablaB, archivo2, CBescogermesa);

        elminarmesa(tablaP, archivo3, CBescogermesa);
    }//GEN-LAST:event_CBescogermesaItemStateChanged

    private void factura1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factura1ActionPerformed
        jButton2.setEnabled(true);

        DefaultTableModel tabla = (DefaultTableModel) tablaC.getModel();

        DefaultTableModel tabla2 = (DefaultTableModel) tablaB.getModel();

        DefaultTableModel tabla3 = (DefaultTableModel) tablaP.getModel();

        DefaultTableModel tabla1 = (DefaultTableModel) Factu.getModel();

        if (Estado.getText().equals("Listo")) {

            if (tabla1.getRowCount() > 0) {

                int i = 0;

                while (i < tabla1.getRowCount()) {

                    tabla1.removeRow(i);

                }

            }
            PizarraI.setVisible(false);
            Factura.setLocationRelativeTo(null);
            Factura.setVisible(true);

            Object comida, cantidad, precio;

            int precioT;

            String pr;

            float prop = 0;

            float contT = 0;

            int p1, c1;

            for (int i = 0; i < tabla.getRowCount(); i++) {

                comida = tabla.getValueAt(i, 0);

                cantidad = tabla.getValueAt(i, 1);

                precio = tabla.getValueAt(i, 2);

                pr = precio.toString().substring(1, precio.toString().length());

                precioT = Integer.parseInt(pr) * Integer.parseInt(cantidad.toString());

                tabla1.addRow(new Object[]{comida, cantidad, precio, precioT});

                prop = prop + precioT;

                contT = contT + precioT;

            }

            for (int i = 0; i < tabla2.getRowCount(); i++) {

                comida = tabla2.getValueAt(i, 0);

                cantidad = tabla2.getValueAt(i, 1);

                precio = tabla2.getValueAt(i, 2);

                pr = precio.toString().substring(1, precio.toString().length());

                precioT = Integer.parseInt(pr) * Integer.parseInt(cantidad.toString());

                tabla1.addRow(new Object[]{comida, cantidad, precio, precioT});

                prop = prop + precioT;

                contT = contT + precioT;

            }

            for (int i = 0; i < tabla3.getRowCount(); i++) {

                comida = tabla3.getValueAt(i, 0);

                cantidad = tabla3.getValueAt(i, 1);

                precio = tabla3.getValueAt(i, 2);

                pr = precio.toString().substring(1, precio.toString().length());

                precioT = Integer.parseInt(pr) * Integer.parseInt(cantidad.toString());

                tabla1.addRow(new Object[]{comida, cantidad, precio, precioT});

                prop = prop + precioT;

                contT = contT + precioT;

            }
            float iva2 = (contT * 21) / 100;

            prop = (prop * 10) / 100;

            contT = contT + prop;

            total.setText(String.valueOf(contT + iva2));

            Propi.setText(String.valueOf(prop));

            try (FileWriter escribir = new FileWriter("FilesLab/factura.txt", true);
                    BufferedWriter bw = new BufferedWriter(escribir)) {

                bw.write(CBescogermesa.getSelectedItem() + ";" + total.getText());
                bw.newLine();

            } catch (IOException ex) {
                //MOSTRAR MENSAJE QUE NO SE PUDO CREAR EL ARCHIVO.
            }

        } else if (Estado.getText().equals("Ninguno")) {

            JOptionPane.showMessageDialog(null, "NO exite pedido en esta mesa", "Atención",
                    JOptionPane.ERROR_MESSAGE);

        } else if (Estado.getText().equals("Espera")) {

            JOptionPane.showMessageDialog(null, "Pedido en espera \n Aun no puede generar factura", "atencion",
                    JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_factura1ActionPerformed

    private void prepararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepararActionPerformed

        if (Estado.getText().equals("Espera")) {
            preparando.setLocationRelativeTo(null);
            PizarraI.setVisible(false);
            preparando.setVisible(true);

            timer.start();
        } else if (Estado.getText().equals("Listo")) {

            JOptionPane.showMessageDialog(null, "Este pedido ya fue preparado.", "Atención",
                    JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_prepararActionPerformed

    public void ponermesa(ListaEnlazada camarero) {
        int CBe = CBescogermesa.getItemCount();
        if (CBescogermesa.getItemCount() > 1) {
            int i = 1;
            while (i < CBescogermesa.getItemCount()) {

                CBescogermesa.removeItemAt(1);
            }
        }
        int cont = 0;
        for (int i = 1; i < camarero.tamaño(); i++) {

            CBescogermesa.addItem(camarero.obtener(i).toString());
        }
    }

    private void verPediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verPediActionPerformed
        Camareros camarer = new Camareros();
        String answer = JOptionPane.showInputDialog("Escriba un nombre de usuario del camarero:");

        int sw;
        sw = camarer.camarer0(answer);
       /* Object a =camarero1.obtener(0);
        Object a2 =camarero2.obtener(0);
        Object a3 =camarero3.obtener(0);
        Object a4 =camarero4.obtener(0);*/
        if (sw == 1) {
            NombreCamarero.setText(answer);
            if (answer.equals(camarero1.obtener(0))) {
                ponermesa(camarero1);

            } else if (answer.equals(camarero2.obtener(0))) {
                ponermesa(camarero2);
            } else if (answer.equals(camarero3.obtener(0))) {
                ponermesa(camarero3);
            } else if (answer.equals(camarero4.obtener(0))) {
                ponermesa(camarero4);
            }
            PizarraI.setLocationRelativeTo(null);
            PizarraI.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Usuario no existe", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_verPediActionPerformed

    private void EmesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmesaActionPerformed

    private void entrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarActionPerformed

        Gerente gerente = new Gerente();
        int sw = gerente.Registrandoadmin(usuario.getText(), contrasena.getText());
        if (sw == 1) {
            admin.setLocationRelativeTo(null);
            admin.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Usuario no existe", "ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_entrarActionPerformed

    private void registrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarseActionPerformed
        registro.setLocationRelativeTo(null);
        registro.setVisible(true);
    }//GEN-LAST:event_registrarseActionPerformed


    private void ir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ir1ActionPerformed
        if (B1.isSelected()) {
            FrameM.setLocationRelativeTo(null);
            FrameM.setVisible(true);
        }

        if (B2.isSelected()) {

            try (FileReader escribir = new FileReader("FilesLab/Costo.txt");
                    BufferedReader br = new BufferedReader(escribir)) {
                String linea = ".";
                float p = 0;

                while (linea != null) {
                    linea = br.readLine();
                    if (linea != null) {
                        System.out.println(p);
                        p = Float.parseFloat(linea) + p;
                    }
                }
                System.out.println(p);

                JOptionPane.showMessageDialog(null, "numero de ventas totales: " + p);
            } catch (IOException ex) {
                //MOSTRAR MENSAJE QUE ALGO SALIÓ MAL
            }

        }
        if (B3.isSelected()) {

            if (listaplato.tamaño() == 0) {
                JOptionPane.showMessageDialog(null, "No hay plato mas vendido ");
            } else {
                for (int i = 0; i < listaplato.tamaño(); i++) {
                    String plato1 = listaplato.obtener(i).toString();
                    String pla1 = "";
                    int p1 = 0;
                    while (!plato1.substring(p1, p1 + 1).equals(",")) {
                        pla1 = pla1 + plato1.substring(p1, p1 + 1);
                        p1++;
                    }
                    p1++;
                    String platom = pla1;
                    int res = Integer.parseInt(plato1.substring(p1, plato1.length()));
                    for (int j = i + 1; j < listaplato.tamaño(); j++) {

                        String plato2 = listaplato.obtener(j).toString();
                        String pla2 = "";
                        int p2 = 0;
                        while (!plato2.substring(p2, p2 + 1).equals(",")) {
                            pla2 = pla2 + plato2.substring(p2, p2 + 1);
                            p2++;
                        }
                        p2++;

                        if (pla1.equals(pla2)) {
                            res = 0;
                            int cant1 = Integer.parseInt(plato1.substring(p1, plato1.length()));
                            int cant2 = Integer.parseInt(plato2.substring(p2, plato2.length()));
                            res = res + cant1 + cant2;

                            listaplato.eliminar(j);

                        }

                    }
                    listaplato2.addultimo(platom + "," + res);
                    System.out.println(listaplato2.obtener(listaplato2.tamaño() - 1));
                }

                //organizar de mayor a menor
                for (int i = 0; i < listaplato2.tamaño(); i++) {

                    String plato1 = listaplato2.obtener(i).toString();
                    int p1 = 0;
                    String pla1 = "";
                    while (!plato1.substring(p1, p1 + 1).equals(",")) {
                        pla1 = pla1 + plato1.substring(p1, p1 + 1);
                        p1++;
                    }
                    p1++;

                    for (int j = i + 1; j < listaplato2.tamaño(); j++) {

                        String plato2 = listaplato2.obtener(j).toString();
                        int p2 = 0;
                        String pla2 = "";
                        while (!plato2.substring(p2, p2 + 1).equals(",")) {
                            pla2 = pla2 + plato2.substring(p2, p2 + 1);
                            p2++;
                        }
                        p2++;

                        if (Integer.parseInt(plato1.substring(p1, plato1.length())) > Integer.parseInt(plato2.substring(p2, plato2.length()))) {
                            mayor = plato1.substring(0, p1 - 1);
                            mayor1 = Integer.parseInt(plato1.substring(p1, plato1.length()));

                        } else {
                            mayor = plato2.substring(0, p2 - 1);
                            mayor1 = Integer.parseInt(plato2.substring(p2, plato2.length()));
                        }
                    }

                }

                JOptionPane.showMessageDialog(null, "el plato mas vendido es:  " + mayor + " con " + mayor1 + " peticiones.");
            }
        }
        if (B4.isSelected()) {
            if (Cmayor.tamaño() == 0) {
                JOptionPane.showMessageDialog(null, "por el momento ninguno");
            } else {
                JOptionPane.showMessageDialog(null, "el camarero que gestiono mas mesas es:  " + Cmayor.obtener(Cmayor.tamaño() - 1) + " con " + Cmayor.obtener(Cmayor.tamaño() - 2) + " mesas.");
            }
        }
    }//GEN-LAST:event_ir1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Factura.setLocationRelativeTo(null);
        Factura.setVisible(false);
        PizarraI.setVisible(true);


    }//GEN-LAST:event_jButton1ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B4ActionPerformed

    private void ComboAItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboAItemStateChanged
        if (ComboA.getSelectedItem().equals("Escoger Mesa")) {
            label1.setText("");
            label2.setText("");
        } else {
            try (FileReader escribir = new FileReader("FilesLab/factura.txt");
                    BufferedReader br = new BufferedReader(escribir)) {
                String linea = "";

                String linea1 = "";
                int x = 0;
                float y = 0, z = 0;

                while (linea != null) {
                    y = 0;
                    linea = br.readLine();
                    if (linea != null) {
                        linea1 = "";
                        x = 0;
                        while (!linea.substring(x, x + 1).equals(";")) {
                            linea1 = linea1 + linea.substring(x, x + 1);
                            x++;
                        }
                        x++;
                        if (linea1.equals(ComboA.getSelectedItem())) {
                            int pop = linea.length();
                            y = Float.parseFloat(linea.substring(x, linea.length() - 1));
                        }
                        z = z + y;
                    }
                }
                label1.setText("el total de ventas es:");
                label2.setText(Float.toString(z));

                br.close();
            } catch (IOException ex) {
                //MOSTRAR MENSAJE QUE ALGO SALIÓ MAL
            }

        }
    }//GEN-LAST:event_ComboAItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try (FileWriter escribir = new FileWriter("FilesLab/Costo.txt", true);
                BufferedWriter bw = new BufferedWriter(escribir)) {

            bw.write(total.getText());
            bw.newLine();

        } catch (IOException ex) {
            //MOSTRAR MENSAJE QUE NO SE PUDO CREAR EL ARCHIVO.
        }
        JOptionPane.showMessageDialog(null, "Pago Completado");
        jButton2.setEnabled(false);
        eliminardatos(tablaC);
        eliminardatos(tablaB);
        eliminardatos(tablaP);
        Estado.setText("Ninguno");
        Estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png")));

        /* String answer = NombreCamarero.getText();
       if (answer.equals(camarero1.obtener(0))) {
                camarero1.eliminarString(CBescogermesa.getSelectedItem().toString());
                
            } else if (answer.equals(camarero2.obtener(0))) {
                camarero2.eliminarString(CBescogermesa.getSelectedItem().toString());
            } else if (answer.equals(camarero3.obtener(0))) {
               camarero3.eliminarString(CBescogermesa.getSelectedItem().toString());
            } else if (answer.equals(camarero4.obtener(0))) {
                camarero4.eliminarString(CBescogermesa.getSelectedItem().toString());
            }*/
        CBescogermesa.removeItem(CBescogermesa.getSelectedItem());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProvActionPerformed
        Provisiones.setLocationRelativeTo(null);
        Provisiones.setVisible(true);

    }//GEN-LAST:event_ProvActionPerformed

    private void defectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defectoActionPerformed
        DefaultTableModel model = (DefaultTableModel) tablalimentos.getModel();
        try (FileWriter escribir = new FileWriter("FilesLab/Provisiones.txt");
                BufferedWriter bw = new BufferedWriter(escribir)) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.setValueAt(Integer.parseInt(model.getValueAt(i, 1).toString()) + 10, i, 1);

                bw.write(model.getValueAt(i, 0) + "," + model.getValueAt(i, 1));
                bw.newLine();

            }
        } catch (IOException ex) {
            //MOSTRAR MENSAJE QUE NO SE PUDO CREAR EL ARCHIVO.
        }
    }//GEN-LAST:event_defectoActionPerformed

    private void be1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_be1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_be1ActionPerformed

    private void newPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPActionPerformed
       if(!newplato.getText().equals("") && newplato.getText()!= null){
           
           DefaultTableModel model = (DefaultTableModel) tablalimentos.getModel();
           
        String nuevoplato = newplato.getText();
        String precio = newprecio.getText();
        int i=0;
        int as=0;
           while(i<model.getRowCount() ){
               if(nuevoplato.equals(model.getValueAt(i, 0))){
                   JOptionPane.showMessageDialog(null, "Este plato ya existe");
                    as=1;
               }
               i++;
           }
           if(as == 0){
            model.addRow(new Object[]{nuevoplato, 0});
            if(co1.isSelected()){
                CBcomida.addItem(nuevoplato + "-$"+ precio);
            }
            if(be1.isSelected()){
                CBbebida.addItem(nuevoplato + "-$"+ precio);
            }
            if(po1.isSelected()){
                CBpostre.addItem(nuevoplato + "-$"+ precio);
            }
           }
        
       }else{
           JOptionPane.showMessageDialog(null, "Digite un plato");
       }
    }//GEN-LAST:event_newPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lobby().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton B1;
    private javax.swing.JRadioButton B2;
    private javax.swing.JRadioButton B3;
    private javax.swing.JRadioButton B4;
    private javax.swing.JComboBox<String> CBbebida;
    private javax.swing.JComboBox<String> CBcomida;
    private javax.swing.JComboBox<String> CBescogermesa;
    private javax.swing.JComboBox<String> CBpostre;
    private javax.swing.JComboBox<String> ComboA;
    private javax.swing.JComboBox<String> Emesa;
    private javax.swing.JLabel Estado;
    private javax.swing.JTable Factu;
    private javax.swing.JFrame Factura;
    private javax.swing.JFrame FrameM;
    private javax.swing.JLabel Mcamarero;
    private javax.swing.JLabel NombreCamarero;
    private javax.swing.JFrame PizarraI;
    private javax.swing.JLabel Propi;
    private javax.swing.JButton Prov;
    private javax.swing.JFrame Provisiones;
    private javax.swing.JTable Tablabe;
    private javax.swing.JTable Tablaco;
    private javax.swing.JTable Tablapo;
    private javax.swing.JFrame admin;
    private javax.swing.JButton agregarB;
    private javax.swing.JButton agregarC;
    private javax.swing.JButton agregarP;
    private javax.swing.JRadioButton be1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton camarero;
    private javax.swing.JButton camarerosenviar;
    private javax.swing.JFrame camarerosframe2;
    private javax.swing.JRadioButton co1;
    private javax.swing.JPasswordField contrasena;
    private javax.swing.JButton defecto;
    private javax.swing.JButton entrar;
    private javax.swing.JButton factura1;
    private javax.swing.JButton ir1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JButton newP;
    private javax.swing.JTextField newplato;
    private javax.swing.JTextField newprecio;
    private javax.swing.JTextField nombrenuevo;
    private javax.swing.JButton nuevo;
    private javax.swing.JPasswordField passnuevo;
    private javax.swing.JRadioButton po1;
    private javax.swing.JFrame preparando;
    private javax.swing.JButton preparar;
    private javax.swing.JProgressBar progreso;
    private javax.swing.JButton registrarse;
    private javax.swing.JFrame registro;
    private javax.swing.JSpinner sp1;
    private javax.swing.JSpinner sp2;
    private javax.swing.JSpinner sp3;
    private javax.swing.JTable tablaB;
    private javax.swing.JTable tablaC;
    private javax.swing.JTable tablaP;
    private javax.swing.JTable tablalimentos;
    private javax.swing.JLabel total;
    private javax.swing.JTextField usuario;
    private javax.swing.JButton verPedi;
    private javax.swing.JButton verificar;
    // End of variables declaration//GEN-END:variables
}
